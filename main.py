import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.methods import DeleteWebhook
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from mistralai.client import MistralClient
from datetime import datetime, timedelta
import pytz
import sqlite3
import random
import os




# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN =  "7529656586:AAHLqQ5mOZXgcl0el8YKBZqiCfp"
MISTRAL_API_KEY = "3pu7nqyufOMsVOJljn"
CHANNEL_ID = -1002540  # ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
ADMIN_ID = 43638  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
MODEL_NAME = "mistral-small-latest"
TIMEZONE = pytz.timezone('Europe/Moscow')
DB_FILE = "elizabeth_bot.db"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
mistral_client = MistralClient(api_key=MISTRAL_API_KEY)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def is_admin(user_id: int) -> bool:
    return user_id == ADMIN_ID


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
def init_db():
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('''CREATE TABLE IF NOT EXISTS posts 
                     (id INTEGER PRIMARY KEY AUTOINCREMENT,
                      content TEXT,
                      post_type TEXT,
                      created_at TIMESTAMP,
                      views INTEGER DEFAULT 0)''')
    cursor.execute('''CREATE TABLE IF NOT EXISTS admins
                     (user_id INTEGER PRIMARY KEY)''')
    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    cursor.execute("INSERT OR IGNORE INTO admins (user_id) VALUES (?)", (ADMIN_ID,))
    conn.commit()
    conn.close()


init_db()

# –¢–µ–º—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤
PERSONAL_STORIES = [

    # –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è
    "–ú–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –ò—Ç–∞–ª–∏–∏ –Ω–∞ —Å—Ç–∞—Ä–µ–Ω—å–∫–æ–º Fiat",
    "–ö–∞–∫ —è –∫—É–ø–∏–ª–∞ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å",
    "–ñ–∏–∑–Ω—å –≤ –¥–æ—Ä–æ–≥–µ: –º–µ—Å—è—Ü –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏ –ø–æ –†–æ—Å—Å–∏–∏",
    "–°–ª—É—á–∞–π –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ: –∏—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è",
    "–ú–æ–∏ –ª—é–±–∏–º—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –≤ –ï–≤—Ä–æ–ø–µ",
    "–ö–∞–∫ —è –Ω–∞—É—á–∏–ª–∞—Å—å —Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—à–∏–Ω—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ",
    "–ê–≤—Ç–æ–º–æ–±–∏–ª—å –∏ —Å–µ–º—å—è: –∫–∞–∫ —Å–æ–≤–º–µ—â–∞—Ç—å",
    "Fiat 500 –ø—Ä–æ—Ç–∏–≤ –ê–ª—å–ø: –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–∞—è –º–∞—à–∏–Ω–∞ –ø–æ–∫–æ—Ä–∏–ª–∞ –≥–æ—Ä–Ω—ã–µ —Å–µ—Ä–ø–∞–Ω—Ç–∏–Ω—ã",
    "–î–æ—Ä–æ–≥–∞ –±–µ–∑ –∫–æ–Ω—Ü–∞: –∫–∞–∫ –º—ã –ø—Ä–æ–µ—Ö–∞–ª–∏ 10 000 –∫–º –∑–∞ –æ–¥–∏–Ω –º–µ—Å—è—Ü",
    "–ì–¥–µ –Ω–æ—á–µ–≤–∞—Ç—å –≤ –¥–æ—Ä–æ–≥–µ: –∫–µ–º–ø–∏–Ω–≥–∏, –º–æ—Ç–µ–ª–∏ –∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –Ω–∞—Ö–æ–¥–∫–∏",
    "–ü–æ—á–µ–º—É —è –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ –º–∞—à–∏–Ω–µ, –∞ –Ω–µ –Ω–∞ —Å–∞–º–æ–ª–µ—Ç–µ",
    "–°–∞–º—ã–µ –æ–ø–∞—Å–Ω—ã–µ –¥–æ—Ä–æ–≥–∏, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —è –ø—Ä–æ–µ—Ö–∞–ª(–∞)",

    # –õ–∏—á–Ω—ã–π –æ–ø—ã—Ç –∏ –∏—Å—Ç–æ—Ä–∏–∏
    "–ö–∞–∫ —è –ø–µ—Ä–µ—Å—Ç–∞–ª(–∞) –±–æ—è—Ç—å—Å—è –¥–∞–ª—å–Ω–∏—Ö –ø–æ–µ–∑–¥–æ–∫",
    "–ú–æ–π —Ö—É–¥—à–∏–π –ø–æ–ª–æ–º–∫–∞ –≤ –ø—É—Ç–∏ (–∏ –∫–∞–∫ —è —Å –Ω–µ–π —Å–ø—Ä–∞–≤–∏–ª—Å—è(–∞—Å—å))",
    "–ü–æ—á–µ–º—É —è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∫—É–ø–ª—é –Ω–æ–≤—É—é –º–∞—à–∏–Ω—É",
    "–ö–∞–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∏–∑–º–µ–Ω–∏–ª –º–æ—é –∂–∏–∑–Ω—å",
    "–ò—Å—Ç–æ—Ä–∏—è –º–æ–µ–π –ø–µ—Ä–≤–æ–π –∞–≤–∞—Ä–∏–∏ –∏ —á—Ç–æ —è –∏–∑ —ç—Ç–æ–≥–æ –≤—ã–Ω–µ—Å(–ª–∞)",

    # –°–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏
    "–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–∞—à–∏–Ω—É –∫ –¥–æ–ª–≥–æ–π –ø–æ–µ–∑–¥–∫–µ: —á–µ–∫-–ª–∏—Å—Ç",
    "–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –±–∞–≥–∞–∂–Ω–∏–∫–µ —É –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞",
    "–ö–∞–∫ —ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö –Ω–∞ –º–∞—à–∏–Ω–µ",
    "–ù–∞–≤–∏–≥–∞—Ç–æ—Ä—ã –ø—Ä–æ—Ç–∏–≤ –∫–∞—Ä—Ç: —á—Ç–æ –ª—É—á—à–µ –≤ –¥–æ—Ä–æ–≥–µ?",
    "–ö–∞–∫ –Ω–µ —É—Å–Ω—É—Ç—å –∑–∞ —Ä—É–ª–µ–º: –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã",

    # –°–µ–º—å—è –∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
    "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Å —Ä–µ–±–µ–Ω–∫–æ–º: –∫–∞–∫ –Ω–µ —Å–æ–π—Ç–∏ —Å —É–º–∞ –≤ –¥–æ—Ä–æ–≥–µ",
    "–ö–∞–∫ –º—ã —Å –º—É–∂–µ–º/–∂–µ–Ω–æ–π –≤—ã–±–∏—Ä–∞–ª–∏ –Ω–∞—à —Å–µ–º–µ–π–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å",
    "–ü–æ—á–µ–º—É —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏ —É–∫—Ä–µ–ø–ª—è—é—Ç –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
    "–ê–≤—Ç–æ–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —Å —Å–æ–±–∞–∫–æ–π: —Å–æ–≤–µ—Ç—ã –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏",

    # –ù–æ—Å—Ç–∞–ª—å–≥–∏—è –∏ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è
    "–ü–æ—á–µ–º—É —Å—Ç–∞—Ä—ã–µ –º–∞—à–∏–Ω—ã –ª—É—á—à–µ –Ω–æ–≤—ã—Ö",
    "–ö–∞–∫ –∑–≤—É–∫ –º–æ—Ç–æ—Ä–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
    "–î–æ—Ä–æ–≥–∞ –∫–∞–∫ —Ç–µ—Ä–∞–ø–∏—è: –ø–æ—á–µ–º—É —è –ª—é–±–ª—é –µ–∑–¥–∏—Ç—å –æ–¥–∏–Ω(–∞)",
    "–ú–∞—à–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ —è –ø—Ä–æ–¥–∞–ª(–∞) –∏ –æ –∫–æ—Ç–æ—Ä—ã—Ö –¥–æ —Å–∏—Ö –ø–æ—Ä –∂–∞–ª–µ—é"


]

CAR_NEWS = [

    # –ù–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
    "–ù–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π 2024 –≥–æ–¥–∞",
    "–≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏: –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏",
    "–ê–≤—Ç–æ—Ä—ã–Ω–æ–∫ –†–æ—Å—Å–∏–∏: —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å?",
    "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±—É–¥—É—â–µ–≥–æ –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ—Å—Ç—Ä–æ–µ–Ω–∏–∏",
    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö: –Ω–æ–≤—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã",
    "–ê–≤—Ç–æ—Å–ø–æ—Ä—Ç: –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è",
    "–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π",
    "–ì–∏–±—Ä–∏–¥—ã vs —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏: —á—Ç–æ –≤—ã–≥–æ–¥–Ω–µ–µ –≤ 2024?",
    "–°–∞–º—ã–µ –æ–∂–∏–¥–∞–µ–º—ã–µ –Ω–æ–≤–∏–Ω–∫–∏ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–æ–≤ —ç—Ç–æ–≥–æ –≥–æ–¥–∞",
    "–ö–∏—Ç–∞–π—Å–∫–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏: —Å—Ç–æ–∏—Ç –ª–∏ –ø–æ–∫—É–ø–∞—Ç—å?",
    "–ö–∞–∫ –±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–µ–Ω—è—é—Ç –∞–≤—Ç–æ—Ä—ã–Ω–æ–∫",
    "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ –∫–ª–∞—Å—Å–∞ –ª—é–∫—Å 2024: –æ–±–∑–æ—Ä —Ç–æ–ø-–º–æ–¥–µ–ª–µ–π",

    # –≠–∫–æ–ª–æ–≥–∏—è –∏ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å–Ω–æ—Å—Ç—å
    "–ü—Ä–∞–≤–¥–∞ –ª–∏, —á—Ç–æ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏ —ç–∫–æ–ª–æ–≥–∏—á–Ω–µ–µ?",
    "–ì–¥–µ –∏ –∫–∞–∫ –∑–∞—Ä—è–∂–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–∫–∞—Ä: –≥–∏–¥ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤",
    "–°–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ —Å–ª—É–∂–∞—Ç –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã –≤ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—è—Ö?",
    "–í–æ–¥–æ—Ä–æ–¥–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏: –µ—Å—Ç—å –ª–∏ –±—É–¥—É—â–µ–µ?",
    "–ö–∞–∫ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏",
    "–°–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏ 2024 –≥–æ–¥–∞",

    # –ê–≤—Ç–æ—Ä—ã–Ω–æ–∫ –∏ —ç–∫–æ–Ω–æ–º–∏–∫–∞
    "–ü–æ–¥–µ—Ä–∂–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ –≤ 2024: –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ?",
    "–ö–∞–∫ –∫—Ä–∏–∑–∏—Å –ø–æ–≤–ª–∏—è–ª –Ω–∞ —Ü–µ–Ω—ã –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏?",
    "–õ—É—á—à–∏–µ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ –ø–æ–∫—É–ø–∫—É –∞–≤—Ç–æ",
    "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –ö–ê–°–ö–û: –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏",
    "–ö–∞–∫–∏–µ –º–∞—à–∏–Ω—ã –ª—É—á—à–µ –≤—Å–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å?",
    "–ê–≤—Ç–æ–ª–∏–∑–∏–Ω–≥: –ø–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã –≤ 2024 –≥–æ–¥—É",

    # –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö: —á—Ç–æ —É–º–µ–µ—Ç?",
    "–ù–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–º–æ—â–∏ –≤–æ–¥–∏—Ç–µ–ª—é (ADAS) –≤ 2024",
    "–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: –º–∏—Ñ –∏–ª–∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å?",
    "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏—è?",
    "–û–±–∑–æ—Ä —Å–∞–º—ã—Ö –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –ø–æ –≤–µ—Ä—Å–∏–∏ Euro NCAP",
    "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è V2X: –º–∞—à–∏–Ω—ã —É—á–∞—Ç—Å—è '–æ–±—â–∞—Ç—å—Å—è' —Å –¥–æ—Ä–æ–≥–æ–π",

    # –ê–≤—Ç–æ—Å–ø–æ—Ä—Ç –∏ —Ç—é–Ω–∏–Ω–≥
    "–§–æ—Ä–º—É–ª–∞-1 2024: –≥–ª–∞–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ–∑–æ–Ω–∞",
    "–†–∞–ª–ª–∏ –î–∞–∫–∞—Ä 2024: —Å–∞–º—ã–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã",
    "–ö–∞–∫ –ª–µ–≥–∞–ª—å–Ω–æ —Ç—é–Ω–∏–Ω–≥–æ–≤–∞—Ç—å –∞–≤—Ç–æ –≤ –†–æ—Å—Å–∏–∏?",
    "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π –∞–≤—Ç–æ—Å–ø–æ—Ä—Ç: –±—É–¥—É—â–µ–µ –∏–ª–∏ –º–æ–¥–∞?",
    "–õ—É—á—à–∏–µ –≥–æ–Ω–æ—á–Ω—ã–µ —Å–∏–º—É–ª—è—Ç–æ—Ä—ã –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
    "–£–ª–∏—á–Ω—ã–µ –≥–æ–Ω–∫–∏: –ø–æ—á–µ–º—É —ç—Ç–æ –¥–æ —Å–∏—Ö –ø–æ—Ä –ø–æ–ø—É–ª—è—Ä–Ω–æ?",

    # –ü–æ–∫—É–ø–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
    "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π?",
    "–ì–ª–∞–≤–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–µ—Ä–≤–æ–≥–æ –∞–≤—Ç–æ",
    "–ì–¥–µ –¥–µ—à–µ–≤–ª–µ –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å –º–∞—à–∏–Ω—É: –¥–∏–ª–µ—Ä –∏–ª–∏ —Å–µ—Ä–≤–∏—Å?",
    "–ö–∞–∫ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ –∑–∞–ø—á–∞—Å—Ç—è—Ö –±–µ–∑ —Ä–∏—Å–∫–∞?",
    "–ó–∏–º–Ω—è—è —Ä–µ–∑–∏–Ω–∞ 2024: –∫–∞–∫–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –ª—É—á—à–µ?",
    "–ö–∞–∫ —á–∞—Å—Ç–æ –Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å –º–∞—Å–ª–æ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∞–≤—Ç–æ?",

    # –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –¥–æ—Ä–æ–≥–∏
    "–õ—É—á—à–∏–µ –¥–æ—Ä–æ–≥–∏ –†–æ—Å—Å–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π",
    "–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –º–∞—à–∏–Ω—É –∫ –¥–ª–∏–Ω–Ω–æ–π –ø–æ–µ–∑–¥–∫–µ?",
    "–ù–µ–æ–±—ã—á–Ω—ã–µ –¥–æ—Ä–æ–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö",
    "–ì–¥–µ –º–æ–∂–Ω–æ –ø—Ä–æ–µ—Ö–∞—Ç—å –Ω–∞ –º–∞—à–∏–Ω–µ, –Ω–æ –ª—É—á—à–µ –Ω–µ —Å—Ç–æ–∏—Ç",
    "–ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –∫–µ–º–ø–∏–Ω–≥–∏: –Ω–æ–≤—ã–π —Ç—Ä–µ–Ω–¥ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π",
    "–ö–∞–∫ –Ω–µ –ø–æ–ø–∞—Å—Ç—å –≤ –ø—Ä–æ–±–∫—É: –ø–æ–ª–µ–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏ —Å–æ–≤–µ—Ç—ã"

]




# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
def get_main_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ï–ª–∏–∑–∞–≤–µ—Ç—É"))
    builder.add(types.KeyboardButton(text="üìÖ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"))
    builder.add(types.KeyboardButton(text="üìù –õ–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è"))
    builder.add(types.KeyboardButton(text="üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"))
    builder.add(types.KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞
async def generate_post(theme: str, is_personal: bool) -> str:
    try:
        if is_personal:
            prompt = (f"–ù–∞–ø–∏—à–∏ –ª–∏—á–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –æ—Ç –∏–º–µ–Ω–∏ –ï–ª–∏–∑–∞–≤–µ—Ç—ã –Ω–∞ —Ç–µ–º—É '{theme}'. "
                      f"–ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å, —ç–º–æ–¥–∑–∏, —Å–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∂–∏–≤—ã–º –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º. "
                      f"–ü–∏—à–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞, –∫–∞–∫ –±—É–¥—Ç–æ —ç—Ç–æ –¥–Ω–µ–≤–Ω–∏–∫–æ–≤–∞—è –∑–∞–ø–∏—Å—å.")
        else:
            prompt = (f"–ù–∞–ø–∏—à–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Å—Ç –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö –Ω–∞ —Ç–µ–º—É '{theme}'. "
                      f"–ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω. "
                      f"–î–æ–±–∞–≤—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")

        response = mistral_client.chat(
            model=MODEL_NAME,
            messages=[{"role": "user", "content": prompt}]
        )
        return response.choices[0].message.content
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞: {e}")
        return None


# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞
async def publish_post(theme: str = None, is_personal: bool = True):
    if not theme:
        theme = random.choice(PERSONAL_STORIES if is_personal else CAR_NEWS)

    post_content = await generate_post(theme, is_personal)
    if post_content:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        post_type = "personal" if is_personal else "news"
        cursor.execute("INSERT INTO posts (content, post_type, created_at) VALUES (?, ?, ?)",
                       (post_content, post_type, datetime.now()))
        post_id = cursor.lastrowid
        conn.commit()
        conn.close()

        # –ü—É–±–ª–∏–∫—É–µ–º –≤ –∫–∞–Ω–∞–ª
        if is_personal:
            header = "üåü –õ–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –ï–ª–∏–∑–∞–≤–µ—Ç—ã üåü\n\n"
            footer = "\n\n#–ª–∏—á–Ω–æ–µ #–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è #–∏—Å—Ç–æ—Ä–∏—è"
        else:
            header = "üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ üöó\n\n"
            footer = "\n\n#–Ω–æ–≤–æ—Å—Ç–∏ #–∞–≤—Ç–æ #—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"

        await bot.send_message(
            chat_id=CHANNEL_ID,
            text=f"{header}{post_content}{footer}",
            parse_mode="Markdown"
        )
        return True
    return False


# –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥
async def auto_posting():
    while True:
        now = datetime.now(TIMEZONE)
        if now.hour == 9:  # –£—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç - –ª–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è
            await publish_post(is_personal=True)
            await asyncio.sleep(3600 * 12)  # –°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤
        elif now.hour == 21:  # –í–µ—á–µ—Ä–Ω–∏–π –ø–æ—Å—Ç - –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
            await publish_post(is_personal=False)
            await asyncio.sleep(3600 * 12)  # –°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤
        await asyncio.sleep(3600)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–π —á–∞—Å


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É")
        return

    await message.answer("üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ï–ª–∏–∑–∞–≤–µ—Ç—ã:", reply_markup=get_main_keyboard())


@dp.message(lambda message: message.text == "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ï–ª–∏–∑–∞–≤–µ—Ç—É")
async def start_elizabeth(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º")
        return

    asyncio.create_task(auto_posting())
    await message.answer(
        "‚úÖ –ï–ª–∏–∑–∞–≤–µ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–∞! –ü–æ—Å—Ç—ã –±—É–¥—É—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–ª–∏—á–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ —É—Ç—Ä–æ–º –∏ –Ω–æ–≤–æ—Å—Ç–∏ –≤–µ—á–µ—Ä–æ–º).")


@dp.message(lambda message: message.text == "üìÖ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞")
async def auto_fill_channel(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º")
        return

    await message.answer("‚è≥ –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞...")
    for _ in range(3):  # 3 –ª–∏—á–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏
        if await publish_post(is_personal=True):
            await asyncio.sleep(600)
    for _ in range(3):  # 3 –Ω–æ–≤–æ—Å—Ç–∏
        if await publish_post(is_personal=False):
            await asyncio.sleep(600)
    await message.answer("‚úÖ –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω!")


@dp.message(lambda message: message.text == "üìù –õ–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è")
async def personal_story(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º")
        return

    theme = random.choice(PERSONAL_STORIES)
    if await publish_post(theme, is_personal=True):
        await message.answer("‚úÖ –õ–∏—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!")
    else:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é")


@dp.message(lambda message: message.text == "üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏")
async def car_news(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º")
        return

    theme = random.choice(CAR_NEWS)
    if await publish_post(theme, is_personal=False):
        await message.answer("‚úÖ –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!")
    else:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å")


@dp.message(lambda message: message.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_stats(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º")
        return

    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()

    cursor.execute("SELECT COUNT(*) FROM posts WHERE post_type='personal'")
    personal_count = cursor.fetchone()[0]

    cursor.execute("SELECT COUNT(*) FROM posts WHERE post_type='news'")
    news_count = cursor.fetchone()[0]

    cursor.execute("SELECT SUM(views) FROM posts")
    total_views = cursor.fetchone()[0] or 0

    conn.close()

    await message.answer(
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞ –ï–ª–∏–∑–∞–≤–µ—Ç—ã:\n\n"
        f"‚Ä¢ –õ–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏–π: {personal_count}\n"
        f"‚Ä¢ –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: {news_count}\n"
        f"‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {total_views}"
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        logging.info("Starting –ï–ª–∏–∑–∞–≤–µ—Ç–∞...")
        await bot(DeleteWebhook(drop_pending_updates=True))
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())


















